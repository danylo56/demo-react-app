{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","to","className","s","dialog","activeClassName","active","name","Message","myMessage","message","right","text","maxlength100","maxLength","AddMessageFormRedux","reduxForm","form","controls","onSubmit","handleSubmit","Field","controls__input","validate","required","component","TextArea","type","Dialogs","dialogsElements","dialogsPage","dialogs","map","el","messageElements","messages","dialogsItems","chat","values","sendMessage","newMessageBody","withAuthRedirect","compose","connect","state","isAuth","auth","dispatch","sendMessageCreator"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,KAAO,sBAAsB,SAAW,0BAA0B,gBAAkB,iCAAiC,QAAU,yBAAyB,MAAQ,yB,kHCe1VC,EAXI,SAACC,GAEhB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,cAAC,IAAD,CAASC,GAAIF,EAAMG,UAAWC,IAAEC,OAAQC,gBAAiBF,IAAEG,OAA3D,SACKR,EAAMS,QCGJC,EAVC,SAACV,GAEb,IAAII,EAAYJ,EAAMW,UAAYN,IAAEO,QAAU,IAAMP,IAAEQ,MAAQR,IAAEO,QAEhE,OACI,qBAAKR,UAAWA,EAAhB,SAA4BJ,EAAMc,Q,kCCApCC,EAAeC,YAAU,KAYzBC,EAAsBC,YAAU,CAACC,KAAM,kBAAjBD,EAVL,SAAClB,GACpB,OACI,uBAAMI,UAAWC,IAAEe,SAAUC,SAAUrB,EAAMsB,aAA7C,UACI,cAACC,EAAA,EAAD,CAAOnB,UAAWC,IAAEmB,gBAAiBC,SAAU,CAACC,IAAUX,GAAeY,UAAWC,IAAUC,KAAK,OAAOpB,KAAK,mBAC/G,wBAAQoB,KAAK,SAAb,wBAqCGC,EA5BC,SAAC9B,GAGb,IAKI+B,EAAkB/B,EAAMgC,YAAYC,QAAQC,KAAI,SAAAC,GAAE,OAAK,cAAC,EAAD,CAAY1B,KAAM0B,EAAG1B,KAAkBP,GAAIiC,EAAGjC,IAAdiC,EAAGjC,OAG1FkC,EAAkBpC,EAAMgC,YAAYK,SAASH,KAAI,SAAAC,GAAE,OAAK,cAAC,EAAD,CAASrB,KAAMqB,EAAGrB,KAAMH,UAAWwB,EAAGxB,UAAuBT,GAAIiC,EAAGjC,IAAdiC,EAAGjC,OAErH,OACI,sBAAKE,UAAWC,IAAE4B,QAAlB,UACI,qBAAK7B,UAAWC,IAAEiC,aAAlB,SACKP,IAEL,sBAAK3B,UAAWC,IAAEkC,KAAlB,UACI,qBAAKnC,UAAWC,IAAEgC,SAAlB,SACKD,IAEL,cAACnB,EAAD,CAAqBI,SAnBb,SAACmB,GACjBxC,EAAMyC,YAAYD,EAAOE,0BCJLC,YAAiBb,GAE9Bc,sBACXC,aAnBkB,SAACC,GACnB,MAAO,CACHd,YAAac,EAAMd,YACnBe,OAAQD,EAAME,KAAKD,WAIF,SAACE,GACtB,MAAO,CACHR,YAAa,SAACC,GACVO,EAASC,YAAmBR,SAUpCC,IAFWC,CAGbd","file":"static/js/3.d4e65617.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__aQZI9\",\"dialogsItems\":\"Dialogs_dialogsItems__3cFRm\",\"active\":\"Dialogs_active__10XUf\",\"dialog\":\"Dialogs_dialog__3j7jz\",\"messages\":\"Dialogs_messages__2LHfY\",\"chat\":\"Dialogs_chat__3le1D\",\"controls\":\"Dialogs_controls__J60l_\",\"controls__input\":\"Dialogs_controls__input__QTfJU\",\"message\":\"Dialogs_message__38igx\",\"right\":\"Dialogs_right__2LisR\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <NavLink to={path} className={s.dialog} activeClassName={s.active}>\r\n            {props.name}\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    let className = props.myMessage ? s.message + \" \" + s.right : s.message;\r\n\r\n    return (\r\n        <div className={className}>{props.text}</div>\r\n\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { TextArea } from '../Common/FormsControls/FormsControls';\r\nimport { maxLength, required } from \"../../utills/validators/validators\";\r\n\r\n\r\nconst maxlength100 = maxLength(100)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form className={s.controls} onSubmit={props.handleSubmit}>\r\n            <Field className={s.controls__input} validate={[required, maxlength100]} component={TextArea} type=\"text\" name=\"newMessageBody\" />\r\n            <button type=\"submit\">Send</button>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"addMessageForm\"})(AddMessageForm);\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(el => (<DialogItem name={el.name} key={el.id} id={el.id} />))\r\n\r\n\r\n    let messageElements = props.dialogsPage.messages.map(el => (<Message text={el.text} myMessage={el.myMessage} key={el.id} id={el.id} />))\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.chat}>\r\n                <div className={s.messages}>\r\n                    {messageElements}\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/AuthRedirect/AuthRedirect\";\r\nimport { sendMessageCreator } from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n    }\r\n}\r\n\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs)\r\n;"],"sourceRoot":""}